volumes:
  db-data:
    driver: local
  # Mounts the project folder to '/workspace'. The target path inside the container
  # should match what your application expects. In this case, the compose file is
  # in a sub-folder, so you will mount '..'. You would then reference this path as the
  # 'workspaceFolder' in '.devcontainer/devcontainer.json' so VS Code starts here.
  

services:
  db:
    image: mysql:8.0.37
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - 3306:3306

  php:
    image: dft/php:8.2-fpm
    build:
      context: ./build/php
      args:
        USER_ID: ${WWW_USER_ID:-1000}
        GROUP_ID: ${WWW_GROUP_ID:-1000}
        NODE_VERSION: ${NODE_VERSION:-20}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
    environment:
      # More details about this via:
      # https://dev.to/jackmiras/xdebug-in-vscode-with-docker-379l
      XDEBUG_MODE: debug
      XDEBUG_CONFIG:
        client_host=${XDEBUG_CLIENT}
        start_with_request=yes

      # SS DB
      SS_DATABASE_CLASS: MySQLDatabase
      SS_DATABASE_USERNAME: root
      SS_DATABASE_PASSWORD: ${DB_ROOT_PASSWORD}
      SS_DATABASE_SERVER: db

      # SS Dev mode
      SS_ENVIRONMENT_TYPE: dev

      # IDE Config
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}

  nginx:
    image: dft/nginx:stable
    build:
      context: ./build/nginx
      args:
        USER_ID: ${WWW_USER_ID:-1000}
        GROUP_ID: ${WWW_GROUP_ID:-1000}
        WEBROOT: ${WEBROOT:-/}
    environment:
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG?}
      WEBROOT: ${WEBROOT:-/}
    ports:
      - 80:80
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: bind
        source: ./templates
        target: /etc/nginx/templates
    depends_on:
      - db
      - php
